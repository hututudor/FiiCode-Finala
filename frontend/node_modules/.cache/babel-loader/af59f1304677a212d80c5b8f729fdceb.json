{"ast":null,"code":"import _classCallCheck from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tudor/projects/FiiCode-Finala/frontend/src/components/Modals/Info/index.jsx\";\nimport React, { Component } from 'react';\nimport { Image, Modal, Header, Button, Icon } from 'semantic-ui-react';\n\nvar InfoModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoModal, _Component);\n\n  function InfoModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InfoModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InfoModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.closeModal = function () {\n      _this.props.closeModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(InfoModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        open: this.props.show,\n        onClose: function onClose() {\n          return _this2.closeModal();\n        },\n        size: \"tiny\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"How to use?\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Firstly, create an account. You can do this by pressing the register button and then filling your name, email and password. When you need to login, click login and fill your data. When you are in the dashboard, you can add your nephews by clicking the add button. You will have a list of nephews on your left. You can view the nephew's repositories in the center. In the right, you can view details about the nephew, like name, github username and points. You can modify a nephew by clicking edit. You can delete a nephew by clicking delete. You may need to refresh once in a while, so click the refresh button. You can logout using the logout button. The points are calculated like this: 5 points per repository and 1 per commit. If you have any questions, feel free to contact us on hututudor@yahoo.ro.\"), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Button, {\n        labelPosition: \"left\",\n        icon: true,\n        negative: true,\n        onClick: function onClick() {\n          return _this2.closeModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \"Close\")));\n    }\n  }]);\n\n  return InfoModal;\n}(Component);\n\nexport default InfoModal;","map":{"version":3,"sources":["/home/tudor/projects/FiiCode-Finala/frontend/src/components/Modals/Info/index.jsx"],"names":["React","Component","Image","Modal","Header","Button","Icon","InfoModal","closeModal","props","show"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,IAAvC,QAAmD,mBAAnD;;IAEMC,S;;;;;;;;;;;;;;;;;;UACJC,U,GAAa,YAAM;AACjB,YAAKC,KAAL,CAAWD,UAAX;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IADnB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACF,UAAL,EAAN;AAAA,SAFX;AAGE,QAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAQE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gzBARF,EAsBE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,aAAa,EAAC,MADhB;AAEE,QAAA,IAAI,MAFN;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,UAAL,EAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,UADF,CAtBF,CADF;AAoCD;;;;EA1CqBP,S;;AA6CxB,eAAeM,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Image, Modal, Header, Button, Icon } from 'semantic-ui-react';\n\nclass InfoModal extends Component {\n  closeModal = () => {\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <Modal\n        open={this.props.show}\n        onClose={() => this.closeModal()}\n        size=\"tiny\"\n      >\n        <Modal.Header>\n          How to use?\n        </Modal.Header>\n        <Modal.Content>\n          Firstly, create an account. You can do this by pressing the register button and then filling your name, email and password.\n          When you need to login, click login and fill your data.\n          When you are in the dashboard, you can add your nephews by clicking the add button.\n          You will have a list of nephews on your left.\n          You can view the nephew's repositories in the center.\n          In the right, you can view details about the nephew, like name, github username and points.\n          You can modify a nephew by clicking edit.\n          You can delete a nephew by clicking delete.\n          You may need to refresh once in a while, so click the refresh button.\n          You can logout using the logout button.\n          The points are calculated like this: 5 points per repository and 1 per commit.\n          If you have any questions, feel free to contact us on hututudor@yahoo.ro.\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            labelPosition=\"left\"\n            icon\n            negative\n            onClick={() => this.closeModal()}\n          >\n            <Icon name=\"remove\" />\n            Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default InfoModal;\n"]},"metadata":{},"sourceType":"module"}