{"ast":null,"code":"import _classCallCheck from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tudor/projects/FiiCode-Finala/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tudor/projects/FiiCode-Finala/frontend/src/components/Modals/Edit/EditForm/index.jsx\";\nimport React from 'react';\nimport FormClass from '../../../hoc/FormClass';\nimport { Modal, Form, Icon, Message, Button } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport Joi from 'joi-browser';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport * as nephew from '../../../../services/nephewsService';\n\nvar EditAlbumModalForm =\n/*#__PURE__*/\nfunction (_FormClass) {\n  _inherits(EditAlbumModalForm, _FormClass);\n\n  function EditAlbumModalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditAlbumModalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditAlbumModalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        name: '',\n        github: ''\n      },\n      errors: {}\n    };\n    _this.schema = {\n      name: Joi.string().required().label('Name'),\n      github: Joi.string().url().required().label('Github')\n    };\n\n    _this.closeModal = function () {\n      _this.props.closeModal();\n    };\n\n    _this.doSubmit = function () {\n      nephew.edit({\n        name: _this.state.data.name,\n        github: _this.state.data.github\n      }).then(function (res) {\n        _this.props.editNephew(_this.props.user.id, res.data.nephew);\n\n        toast.success('Saved!');\n\n        _this.closeModal();\n      }).catch(function (err) {\n        toast.error('Error saving!');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditAlbumModalForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: {\n          name: this.props.user.name,\n          github: this.props.user.github\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"name\",\n        placeholder: \"Name\",\n        label: \"Name\",\n        onChange: this.handleChange,\n        value: this.state.data.name,\n        className: this.getClass('name'),\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"github\",\n        placeholder: \"Github\",\n        label: \"Github\",\n        onChange: this.handleChange,\n        value: this.state.data.github,\n        className: this.getClass('github'),\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), _.isEmpty(this.state.errors) ? '' : React.createElement(Message, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Errors\"), this.displayErrors()))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        labelPosition: \"left\",\n        icon: true,\n        negative: true,\n        onClick: function onClick() {\n          return _this2.closeModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \"Cancel\"), React.createElement(Button, {\n        labelPosition: \"right\",\n        icon: true,\n        positive: true,\n        onClick: function onClick(event) {\n          return _this2.handleSubmit(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), \"Save\")));\n    }\n  }]);\n\n  return EditAlbumModalForm;\n}(FormClass);\n\nexport default connect(EditAlbumModalForm);","map":{"version":3,"sources":["/home/tudor/projects/FiiCode-Finala/frontend/src/components/Modals/Edit/EditForm/index.jsx"],"names":["React","FormClass","Modal","Form","Icon","Message","Button","_","Joi","connect","toast","nephew","EditAlbumModalForm","state","data","name","github","errors","schema","string","required","label","url","closeModal","props","doSubmit","edit","then","res","editNephew","user","id","success","catch","err","error","setState","handleSubmit","handleChange","getClass","isEmpty","displayErrors","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormClass from '../../../hoc/FormClass';\nimport { Modal, Form, Icon, Message, Button } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport Joi from 'joi-browser';\nimport { connect } from 'react-redux';\nimport {toast} from 'react-toastify';\nimport * as nephew from '../../../../services/nephewsService';\n\nclass EditAlbumModalForm extends FormClass {\n  state = {\n    data: {\n      name: '',\n      github: ''\n    },\n    errors: {}\n  };\n\n  schema = {\n    name: Joi.string()\n      .required()\n      .label('Name'),\n    github: Joi.string()\n      .url()\n      .required()\n      .label('Github'),\n  };\n\n  componentDidMount() {\n    this.setState({\n      data: {\n        name: this.props.user.name,\n        github: this.props.user.github\n      }\n    });\n  }\n\n  closeModal = () => {\n    this.props.closeModal();\n  };\n\n  doSubmit = () => {\n    nephew\n      .edit({\n        name: this.state.data.name,\n        github: this.state.data.github,\n      })\n      .then(res => {\n        this.props.editNephew(this.props.user.id, res.data.nephew);\n        toast.success('Saved!');\n        this.closeModal();\n      })\n      .catch(err => {\n        toast.error('Error saving!');\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Modal.Content>\n          <Modal.Description>\n            <Form onSubmit={this.handleSubmit} size=\"large\">\n              <Form.Input\n                fluid\n                name=\"name\"\n                placeholder=\"Name\"\n                label=\"Name\"\n                onChange={this.handleChange}\n                value={this.state.data.name}\n                className={this.getClass('name')}\n                type=\"text\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"github\"\n                placeholder=\"Github\"\n                label=\"Github\"\n                onChange={this.handleChange}\n                value={this.state.data.github}\n                className={this.getClass('github')}\n                type=\"text\"\n              />\n\n            </Form>\n            {_.isEmpty(this.state.errors) ? (\n              ''\n            ) : (\n              <Message error>\n                <h3>\n                  Errors\n                </h3>\n                {this.displayErrors()}\n              </Message>\n            )}\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            labelPosition=\"left\"\n            icon\n            negative\n            onClick={() => this.closeModal()}\n          >\n            <Icon name=\"remove\" />\n            Cancel\n          </Button>\n          <Button\n            labelPosition=\"right\"\n            icon\n            positive\n            onClick={event => this.handleSubmit(event)}\n          >\n            <Icon name=\"save\" />\n            Save\n          </Button>\n        </Modal.Actions>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(EditAlbumModalForm);\n"]},"metadata":{},"sourceType":"module"}